{"ast":null,"code":"var _jsxFileName = \"/Users/nilsongaspar/Desktop/My Apps/movieApp/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Trailer from './components/MovieTrailer';\nimport Modal from 'react-modal';\nimport MovieList from './components/MovieList';\nimport './App.css';\nModal.setAppElement('#root');\n\nfunction App() {\n  const [trailerList, setTrailerList] = useState([]); // TRAILER LIST\n\n  const [showOverlay, setShowOverlay] = useState(\"overlay\");\n  const [modalIsOpen, setmodalIsOpen] = useState(false);\n  const [isUserMoodActive, setIsUserMoodActive] = useState(false);\n  const [recommendedMovieList, setRecommendedMovieList] = useState([]);\n  const [moodBasedMovieList, setMoodBasedMovieList] = useState([]);\n  const [seasonBasedMovieList, setSeasonBasedMovieList] = useState([]);\n  const customStyles = {\n    content: {\n      top: '35%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      width: '40%',\n      transform: 'translate(-50%, -10%)',\n      textAlign: 'center'\n    },\n    overlay: {\n      backgroundColor: 'rgb(0, 0, 0, .5)'\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: showOverlay,\n    onClick: () => {\n      setShowOverlay(\"overlay\");\n      setTrailerList([]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NavigationBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"logo-link\",\n    href: \"index.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"movieApp\"))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Up Coming\"), /*#__PURE__*/React.createElement(MovieList, {\n    URL: \"/movie/upcoming\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Now Playing\"), /*#__PURE__*/React.createElement(MovieList, {\n    URL: \"/movie/now_playing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Popular Movies\"), /*#__PURE__*/React.createElement(MovieList, {\n    URL: \"/movie/popular\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trailer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, trailerList.slice(0, 1).map(trailer => /*#__PURE__*/React.createElement(Trailer, {\n    key: trailer.key,\n    trailer_key: trailer.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    onRequestClose: () => {\n      setmodalIsOpen(false);\n      setShowOverlay(\"overlay\");\n    },\n    style: customStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"SORRY, NO TRAILER AVAILABLE FOR THIS MOVIE\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nilsongaspar/Desktop/My Apps/movieApp/src/App.js"],"names":["React","useEffect","useState","Trailer","Modal","MovieList","setAppElement","App","trailerList","setTrailerList","showOverlay","setShowOverlay","modalIsOpen","setmodalIsOpen","isUserMoodActive","setIsUserMoodActive","recommendedMovieList","setRecommendedMovieList","moodBasedMovieList","setMoodBasedMovieList","seasonBasedMovieList","setSeasonBasedMovieList","customStyles","content","top","left","right","bottom","marginRight","width","transform","textAlign","overlay","backgroundColor","slice","map","trailer","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Trailer from './components/MovieTrailer';\nimport Modal from 'react-modal';\nimport MovieList from './components/MovieList';\n\nimport './App.css';\n\nModal.setAppElement('#root');\n\nfunction App() {\n\n  const [trailerList, setTrailerList] = useState([]); // TRAILER LIST\n  const [showOverlay, setShowOverlay] = useState(\"overlay\");\n  const [modalIsOpen, setmodalIsOpen] = useState(false);\n  const [isUserMoodActive, setIsUserMoodActive] = useState(false);\n  const [recommendedMovieList, setRecommendedMovieList] = useState([]);\n  const [moodBasedMovieList, setMoodBasedMovieList] = useState([]);\n  const [seasonBasedMovieList, setSeasonBasedMovieList] = useState([]);\n\n\n  const customStyles = {\n    content: {\n      top: '35%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      width: '40%',\n      transform: 'translate(-50%, -10%)',\n      textAlign: 'center',\n    },\n    overlay: {\n      backgroundColor: 'rgb(0, 0, 0, .5)',\n    },\n  };\n\n  return (\n    <div className=\"App\">\n      <div className={showOverlay} onClick={() => { setShowOverlay(\"overlay\"); setTrailerList([]); }}></div>\n\n      <div className=\"NavigationBar\">\n        <h1 className=\"logo\"> \n            <a className=\"logo-link\" href=\"index.html\">movieApp</a>\n        </h1>\n\n      </div>\n\n      <h3>Up Coming</h3>\n      <MovieList URL=\"/movie/upcoming\" />\n\n      <h3>Now Playing</h3>\n      <MovieList URL=\"/movie/now_playing\" />\n\n\n      <h3>Popular Movies</h3>\n      <MovieList URL=\"/movie/popular\" />\n\n\n      <div className=\"trailer-container\">\n        {trailerList.slice(0, 1).map(trailer => (\n          <Trailer\n            key={trailer.key}\n            trailer_key={trailer.key}\n          />\n        ))}\n      </div>\n\n      <Modal isOpen={modalIsOpen} onRequestClose={() => { setmodalIsOpen(false); setShowOverlay(\"overlay\"); }} style={customStyles}>\n        <p>SORRY, NO TRAILER AVAILABLE FOR THIS MOVIE</p>\n      </Modal>\n\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}