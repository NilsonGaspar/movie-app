{"ast":null,"code":"var _jsxFileName = \"/Users/nilsongaspar/Desktop/My Apps/fast-movie-v4/src/MovieList.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction MovieList({\n  URL_PATH\n}) {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {\n    const getData = async () => {\n      setIsError(false);\n      setIsLoading(true);\n\n      try {\n        const result = await axios(`https://api.themoviedb.org/3${URL_PATH}?api_key=${API_KEY}&language=en-GB&include_image_language=en,null`);\n        setMovies(result.data.results);\n        console.log(\"List Data: \", result.data.results);\n      } catch (isError) {\n        setIsError(true);\n      }\n\n      setIsLoading(false);\n    };\n\n    getData();\n  }, [URL_PATH]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popular-movies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, isError && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"Something went wrong...\"), isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }\n  }, \" \", movies.map(movie => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: IMG_URL_LQ + movie.poster_path,\n    key: movie.id,\n    id: movie.id,\n    alt: movie.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })))));\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/nilsongaspar/Desktop/My Apps/fast-movie-v4/src/MovieList.js"],"names":["React","useEffect","useState","axios","MovieList","URL_PATH","movies","setMovies","isLoading","setIsLoading","isError","setIsError","getData","result","API_KEY","data","results","console","log","map","movie","IMG_URL_LQ","poster_path","id","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAKA,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA+B;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,OAAO,GAAG,YAAW;AACvBD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,UAAI;AACA,cAAMI,MAAM,GAAG,MAAMV,KAAK,CAAE,+BAA8BE,QAAS,YAAWS,OAAQ,gDAA5D,CAA1B;AACAP,QAAAA,SAAS,CAACM,MAAM,CAACE,IAAP,CAAYC,OAAb,CAAT;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,MAAM,CAACE,IAAP,CAAYC,OAAvC;AACH,OAJD,CAKA,OAAON,OAAP,EAAgB;AACZC,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACDF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAbD;;AAcAG,IAAAA,OAAO;AACV,GAhBQ,EAgBN,CAACP,QAAD,CAhBM,CAAT;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCK,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADZ,EAGCF,SAAS,gBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADU,gBAEL;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAmCF,MAAM,CAACa,GAAP,CAAWC,KAAK,iBAChD;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,GAAG,EAAEC,UAAU,GAAGD,KAAK,CAACE,WAA7B;AAA0C,IAAA,GAAG,EAAEF,KAAK,CAACG,EAArD;AAAyD,IAAA,EAAE,EAAEH,KAAK,CAACG,EAAnE;AAAuE,IAAA,GAAG,EAAEH,KAAK,CAACI,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADgC,CAAnC,CALL,CADJ;AAgBH;;AAED,eAAepB,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n\n\n\nfunction MovieList({URL_PATH}) {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState(false);\n    useEffect(() => {\n        const getData = async() => {\n            setIsError(false);\n            setIsLoading(true);\n\n            try {\n                const result = await axios(`https://api.themoviedb.org/3${URL_PATH}?api_key=${API_KEY}&language=en-GB&include_image_language=en,null`);\n                setMovies(result.data.results);\n                console.log(\"List Data: \", result.data.results)\n            }\n            catch (isError) {\n                setIsError(true);\n            }\n            setIsLoading(false);\n        }\n        getData();\n    }, [URL_PATH]);\n\n    return (\n        <div className=\"popular-movies\">\n        {isError && <div>Something went wrong...</div>}\n\n        {isLoading ? (\n        <div>Loading...</div>\n        ) : (<div className=\"movie-container\"> {movies.map(movie => (\n                <div className=\"movie-list\">\n                <img src={IMG_URL_LQ + movie.poster_path} key={movie.id} id={movie.id} alt={movie.title} />\n                </div>\n            ))}</div>\n            )}\n\n        </div>\n    )\n \n}\n\nexport default MovieList"]},"metadata":{},"sourceType":"module"}