{"ast":null,"code":"var _jsxFileName = \"/Users/nilsongaspar/Desktop/My Apps/fast-movie-v4/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Movie from './getMovie';\nimport Trailer from './getTrailer';\nimport './App.css';\n\nfunction App() {\n  const API_KEY = \"fb1090731e2fd7eea03536049722f122\";\n  const IMG_URL = \"https://image.tmdb.org/t/p/w500\";\n  const PATH_RECMOVIES = \"/discover/movie\";\n  let PATH_UPCOMING = \"/movie/upcoming\"; // USER PRE MADE CATEGORY \n\n  const getMovieList = async URL => {\n    PATH_UPCOMING = URL;\n    const response = await fetch(`https://api.themoviedb.org/3${PATH_UPCOMING}?api_key=${API_KEY}&language=en-GB`);\n    const data = await response.json();\n    console.log(\"Movie List \", PATH_UPCOMING, data.results);\n    setMovieList(data.results);\n  }; // USER MOOD OPTIONS\n\n\n  const happyMood = async () => {\n    //PATH = \"/movie/popular\";\n    genre = \"28\";\n    randomYear = \"2019\";\n    keyword1 = \"231591\";\n    const response = await fetch(`https://api.themoviedb.org/3${PATH_RECMOVIES}?api_key=${API_KEY}&language=en-GB&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&primary_release_year=\"${randomYear}&with_genres=\"${genre}\"&with_keywords=\"${keyword1}\"|\"${keyword2}\"|\"${keyword3}\"|\"${keyword4}\"|\"${keyword5};`);\n    const data = await response.json();\n    console.log(\"Movie List: \", data.results, response);\n    setMovieList(data.results);\n  }; // GET VIDEO TRAILER\n\n\n  document.onclick = function (event) {\n    // check for any event that happens in the page\n    const target = event.target; // store the content from the \"event\" into the variable target\n\n    if (target.tagName.toLowerCase() === \"img\") {\n      // change the image name to lower case and check if it is equal to \"img\"\n      console.log(target);\n      const movie_id = target.attributes.id.value; // get movie ID\n\n      console.log(\"Movie ID: \", movie_id);\n\n      const getTrailer = async () => {\n        const TRAILER_PATH = `/movie/${movie_id}/videos`; // create url to search for movie id\n\n        const response = await fetch(`https://api.themoviedb.org/3${TRAILER_PATH}?api_key=${API_KEY}&language=en-GB`);\n        const data = await response.json();\n        console.log(\"Trailer List: \", data.results);\n        setTrailerList(data.results); // check if there is a trailer available\n\n        if (data.results.length === 0) {\n          console.log(\"No trailer found\");\n          return;\n        }\n      };\n\n      getTrailer();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"index.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 26\n    }\n  }, \"fastMovie\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mood-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mood-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"How Are You Feeling Today?\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-happy\",\n    onClick: () => {\n      getMovieList(URL = \"/movie/upcoming\");\n      getMovieList(URL = \"/movie/popular\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Happy\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-sad\",\n    onClick: () => getMovieList(\"/movie/popular\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Sad\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Tired\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Angry\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recommended-movies-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, recommendedMovieList.map(movie => /*#__PURE__*/React.createElement(Movie, {\n    key: movie.id,\n    movie_id: movie.id,\n    poster: IMG_URL + movie.poster_path,\n    rating: movie.vote_average,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, movieList.map(movie => /*#__PURE__*/React.createElement(Movie, {\n    key: movie.id,\n    movie_id: movie.id,\n    poster: IMG_URL + movie.poster_path,\n    rating: movie.vote_average,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trailer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, trailerList.slice(0, 1).map(trailer => /*#__PURE__*/React.createElement(Trailer, {\n    key: trailer.key,\n    trailer_key: trailer.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nilsongaspar/Desktop/My Apps/fast-movie-v4/src/App.js"],"names":["React","useEffect","useState","Movie","Trailer","App","API_KEY","IMG_URL","PATH_RECMOVIES","PATH_UPCOMING","getMovieList","URL","response","fetch","data","json","console","log","results","setMovieList","happyMood","genre","randomYear","keyword1","keyword2","keyword3","keyword4","keyword5","document","onclick","event","target","tagName","toLowerCase","movie_id","attributes","id","value","getTrailer","TRAILER_PATH","setTrailerList","length","recommendedMovieList","map","movie","poster_path","vote_average","movieList","trailerList","slice","trailer","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Movie from './getMovie';\nimport Trailer from './getTrailer';\nimport './App.css';\n\nfunction App() {\n\nconst API_KEY = \"fb1090731e2fd7eea03536049722f122\";\nconst IMG_URL = \"https://image.tmdb.org/t/p/w500\";\nconst PATH_RECMOVIES = \"/discover/movie\";\nlet PATH_UPCOMING = \"/movie/upcoming\";\n\n\n\n\n\n// USER PRE MADE CATEGORY \nconst getMovieList = async (URL) => {\n  PATH_UPCOMING = URL;\n  const response = await fetch(`https://api.themoviedb.org/3${PATH_UPCOMING}?api_key=${API_KEY}&language=en-GB`);\n  const data = await response.json();\n  console.log(\"Movie List \", PATH_UPCOMING, data.results);\n  setMovieList(data.results);\n\n}\n\n// USER MOOD OPTIONS\nconst happyMood = async () => {\n  //PATH = \"/movie/popular\";\n  genre = \"28\";\n  randomYear = \"2019\";\n  keyword1 = \"231591\";\n  const response = await fetch(`https://api.themoviedb.org/3${PATH_RECMOVIES}?api_key=${API_KEY}&language=en-GB&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&primary_release_year=\"${randomYear}&with_genres=\"${genre}\"&with_keywords=\"${keyword1}\"|\"${keyword2}\"|\"${keyword3}\"|\"${keyword4}\"|\"${keyword5};`);\n  const data = await response.json();\n  console.log(\"Movie List: \", data.results, response);\n  setMovieList(data.results);\n}\n\n\n// GET VIDEO TRAILER\ndocument.onclick = function (event) { // check for any event that happens in the page\n  const target = event.target; // store the content from the \"event\" into the variable target\n  if (target.tagName.toLowerCase() === \"img\") { // change the image name to lower case and check if it is equal to \"img\"\n  console.log(target);\n  const movie_id = target.attributes.id.value; // get movie ID\n  console.log(\"Movie ID: \", movie_id);\n  \n  const getTrailer = async () => {\n    const TRAILER_PATH = `/movie/${movie_id}/videos`; // create url to search for movie id\n    const response = await fetch(`https://api.themoviedb.org/3${TRAILER_PATH}?api_key=${API_KEY}&language=en-GB`);\n    const data = await response.json();\n    console.log(\"Trailer List: \", data.results);\n    setTrailerList(data.results);\n    \n  // check if there is a trailer available\n  if (data.results.length === 0) {\n    console.log(\"No trailer found\");\n    \n  return;\n  }\n\n  }\n  getTrailer();\n\n\n  }\n}\n\n\n\n\n\nreturn (\n  <div className=\"App\">\n\n    <h1 className=\"logo\"><a href=\"index.html\">fastMovie</a></h1>\n      \n    <div className=\"mood-options\">\n      <p className=\"mood-status\">How Are You Feeling Today?</p>\n      <button className=\"btn-happy\" onClick={() => {getMovieList(URL = \"/movie/upcoming\"); getMovieList(URL = \"/movie/popular\");}}>Happy</button>\n      <button className=\"btn-sad\" onClick={() => getMovieList(\"/movie/popular\")}>Sad</button>\n      <button>Tired</button>\n      <button>Angry</button>\n    </div>\n\n    <div className=\"recommended-movies-container\">\n      {recommendedMovieList.map(movie => (\n        <Movie \n        key= {movie.id}\n        movie_id= {movie.id}\n        poster= {IMG_URL + movie.poster_path} \n        rating= {movie.vote_average} />\n      ))}\n      </div>\n\n\n\n      <div className=\"movie-container\">\n      {movieList.map(movie => (\n        <Movie \n        key= {movie.id}\n        movie_id= {movie.id}\n        poster= {IMG_URL + movie.poster_path} \n        rating= {movie.vote_average} />\n      ))}\n      </div>\n\n      <div className=\"trailer-container\">       \n      {trailerList.slice(0, 1).map(trailer => (\n        <Trailer\n        key= {trailer.key}\n        trailer_key= {trailer.key}\n      />\n      ))}\n      </div>\n\n\n  </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}