{"ast":null,"code":"var _jsxFileName = \"/Users/nilsongaspar/Desktop/My Apps/fast-movie-v4/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Movie from './getMovie';\nimport Trailer from './getTrailer';\nimport './App.css';\n\nfunction App() {\n  const API_KEY = \"fb1090731e2fd7eea03536049722f122\";\n  const IMG_URL = \"https://image.tmdb.org/t/p/w500\";\n  const RECOMMENDED_MOVIES_PATH = \"/discover/movie\";\n  const UPCOMING_PATH = \"/movie/upcoming\";\n  const NOWPLAYING_PATH = \"/movie/now_playing\";\n  const POPULAR_PATH = \"/movie/popular\";\n  const [upComingMovieList, setUpComingMovieList] = useState([]); // UP COMING MOVIE LIST\n\n  const [nowPlayingMovieList, setNowPlayingMovieList] = useState([]); // NOW PLAYING MOVIE LIST\n\n  const [popularMovieList, setPopularMovieList] = useState([]); // POPULAR MOVIE LIST\n\n  const [trailerList, setTrailerList] = useState([]); // TRAILER LIST\n\n  const [recommendedMovieList, setRecommendedMovieList] = useState([]); // RECOMMENDED MOVIE LIST\n\n  useEffect(() => {\n    getUpComingMovieList();\n    getPopularMovieList();\n    getNowPlayingMovieList();\n  }, []); // UP COMING MOVIE LIST\n\n  const getUpComingMovieList = async () => {\n    const response = await fetch(`https://api.themoviedb.org/3${UPCOMING_PATH}?api_key=${API_KEY}&language=en-GB`);\n    const data = await response.json();\n    console.log(\"Movie List \", data.results);\n    setUpComingMovieList(data.results);\n  }; // POPULAR MOVIE LIST\n\n\n  const getPopularMovieList = async () => {\n    const response = await fetch(`https://api.themoviedb.org/3${POPULAR_PATH}?api_key=${API_KEY}&language=en-GB`);\n    const data = await response.json();\n    console.log(\"Movie List \", data.results);\n    setPopularMovieList(data.results);\n  }; // POPULAR MOVIE LIST\n\n\n  const getNowPlayingMovieList = async () => {\n    const response = await fetch(`https://api.themoviedb.org/3${NOWPLAYING_PATH}?api_key=${API_KEY}&language=en-GB`);\n    const data = await response.json();\n    console.log(\"Movie List \", data.results);\n    setNowPlayingMovieList(data.results);\n  }; // USER MOOD OPTIONS\n\n\n  const happyMood = async () => {\n    //PATH = \"/movie/popular\";\n    const response = await fetch(`https://api.themoviedb.org/3${RECOMMENDED_MOVIES_PATH}?api_key=${API_KEY}&language=en-GB&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&primary_release_year=${randomYear}&with_genres=${genre}&with_keywords=${keyword1}|${keyword2}|${keyword3}|${keyword4}|${keyword5};`);\n    const data = await response.json();\n    console.log(\"Movie List Recommended: \", data.results, response);\n    setRecommendedMovieList(data.results);\n  }; // GET VIDEO TRAILER\n\n\n  document.onclick = function (event) {\n    // check for any event that happens in the page\n    const target = event.target; // store the content from the \"event\" into the variable target\n\n    if (target.tagName.toLowerCase() === \"img\") {\n      // change the image name to lower case and check if it is equal to \"img\"\n      console.log(target);\n      const movie_id = target.attributes.id.value; // get movie ID\n\n      console.log(\"Movie ID: \", movie_id);\n\n      const getTrailer = async () => {\n        const TRAILER_PATH = `/movie/${movie_id}/videos`; // create url to search for movie id\n\n        const response = await fetch(`https://api.themoviedb.org/3${TRAILER_PATH}?api_key=${API_KEY}&language=en-GB`);\n        const data = await response.json();\n        console.log(\"Trailer List: \", data.results);\n        setTrailerList(data.results); // check if there is a trailer available\n\n        if (data.results.length === 0) {\n          console.log(\"No trailer found\");\n          return;\n        }\n      };\n\n      getTrailer();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"index.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 26\n    }\n  }, \"fastMovie\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mood-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mood-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"How Are You Feeling Today?\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-happy\",\n    onClick: () => happyMood(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, \"Happy\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-sad\",\n    onClick: () => getUpComingMovieList(\"/movie/popular\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Sad\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Tired\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, \"Angry\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recommended-movies-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, recommendedMovieList.map(movie => /*#__PURE__*/React.createElement(Movie, {\n    key: movie.id,\n    movie_id: movie.id,\n    poster: IMG_URL + movie.poster_path,\n    rating: movie.vote_average,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, upComingMovieList.map(movie => /*#__PURE__*/React.createElement(Movie, {\n    key: movie.id,\n    movie_id: movie.id,\n    poster: IMG_URL + movie.poster_path,\n    rating: movie.vote_average,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, popularMovieList.map(movie => /*#__PURE__*/React.createElement(Movie, {\n    key: movie.id,\n    movie_id: movie.id,\n    poster: IMG_URL + movie.poster_path,\n    rating: movie.vote_average,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, nowPlayingMovieList.map(movie => /*#__PURE__*/React.createElement(Movie, {\n    key: movie.id,\n    movie_id: movie.id,\n    poster: IMG_URL + movie.poster_path,\n    rating: movie.vote_average,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trailer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, trailerList.slice(0, 1).map(trailer => /*#__PURE__*/React.createElement(Trailer, {\n    key: trailer.key,\n    trailer_key: trailer.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nilsongaspar/Desktop/My Apps/fast-movie-v4/src/App.js"],"names":["React","useEffect","useState","Movie","Trailer","App","API_KEY","IMG_URL","RECOMMENDED_MOVIES_PATH","UPCOMING_PATH","NOWPLAYING_PATH","POPULAR_PATH","upComingMovieList","setUpComingMovieList","nowPlayingMovieList","setNowPlayingMovieList","popularMovieList","setPopularMovieList","trailerList","setTrailerList","recommendedMovieList","setRecommendedMovieList","getUpComingMovieList","getPopularMovieList","getNowPlayingMovieList","response","fetch","data","json","console","log","results","happyMood","randomYear","genre","keyword1","keyword2","keyword3","keyword4","keyword5","document","onclick","event","target","tagName","toLowerCase","movie_id","attributes","id","value","getTrailer","TRAILER_PATH","length","map","movie","poster_path","vote_average","slice","trailer","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Movie from './getMovie';\nimport Trailer from './getTrailer';\nimport './App.css';\n\nfunction App() {\n\nconst API_KEY = \"fb1090731e2fd7eea03536049722f122\";\nconst IMG_URL = \"https://image.tmdb.org/t/p/w500\";\nconst RECOMMENDED_MOVIES_PATH = \"/discover/movie\";\nconst UPCOMING_PATH = \"/movie/upcoming\";\nconst NOWPLAYING_PATH = \"/movie/now_playing\";\nconst POPULAR_PATH = \"/movie/popular\";\n\nconst [upComingMovieList, setUpComingMovieList] = useState([]); // UP COMING MOVIE LIST\nconst [nowPlayingMovieList, setNowPlayingMovieList] = useState([]); // NOW PLAYING MOVIE LIST\nconst [popularMovieList, setPopularMovieList] = useState([]); // POPULAR MOVIE LIST\nconst [trailerList, setTrailerList] = useState([]); // TRAILER LIST\nconst [recommendedMovieList, setRecommendedMovieList] = useState([]); // RECOMMENDED MOVIE LIST\n\nuseEffect(() => {\n\n  getUpComingMovieList()\n  getPopularMovieList()\n  getNowPlayingMovieList()\n\n}, []);\n\n// UP COMING MOVIE LIST\nconst getUpComingMovieList = async () => {\n  const response = await fetch(`https://api.themoviedb.org/3${UPCOMING_PATH}?api_key=${API_KEY}&language=en-GB`);\n  const data = await response.json();\n  console.log(\"Movie List \", data.results);\n  setUpComingMovieList(data.results);\n}\n\n// POPULAR MOVIE LIST\nconst getPopularMovieList = async () => {\n  const response = await fetch(`https://api.themoviedb.org/3${POPULAR_PATH}?api_key=${API_KEY}&language=en-GB`);\n  const data = await response.json();\n  console.log(\"Movie List \", data.results);\n  setPopularMovieList(data.results);\n}\n\n// POPULAR MOVIE LIST\nconst getNowPlayingMovieList = async () => {\n  const response = await fetch(`https://api.themoviedb.org/3${NOWPLAYING_PATH}?api_key=${API_KEY}&language=en-GB`);\n  const data = await response.json();\n  console.log(\"Movie List \", data.results);\n  setNowPlayingMovieList(data.results);\n}\n\n\n// USER MOOD OPTIONS\nconst happyMood = async () => {\n  //PATH = \"/movie/popular\";\n\n  const response = await fetch(`https://api.themoviedb.org/3${RECOMMENDED_MOVIES_PATH}?api_key=${API_KEY}&language=en-GB&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&primary_release_year=${randomYear}&with_genres=${genre}&with_keywords=${keyword1}|${keyword2}|${keyword3}|${keyword4}|${keyword5};`);\n  const data = await response.json();\n  console.log(\"Movie List Recommended: \", data.results, response);\n  setRecommendedMovieList(data.results);\n}\n\n\n// GET VIDEO TRAILER\ndocument.onclick = function (event) { // check for any event that happens in the page\n  const target = event.target; // store the content from the \"event\" into the variable target\n  if (target.tagName.toLowerCase() === \"img\") { // change the image name to lower case and check if it is equal to \"img\"\n  console.log(target);\n  const movie_id = target.attributes.id.value; // get movie ID\n  console.log(\"Movie ID: \", movie_id);\n  \n  const getTrailer = async () => {\n    const TRAILER_PATH = `/movie/${movie_id}/videos`; // create url to search for movie id\n    const response = await fetch(`https://api.themoviedb.org/3${TRAILER_PATH}?api_key=${API_KEY}&language=en-GB`);\n    const data = await response.json();\n    console.log(\"Trailer List: \", data.results);\n    setTrailerList(data.results);\n    \n  // check if there is a trailer available\n  if (data.results.length === 0) {\n    console.log(\"No trailer found\");\n    \n  return;\n  }\n\n  }\n  getTrailer();\n\n\n  }\n}\n\n\n\n\n\nreturn (\n  <div className=\"App\">\n\n    <h1 className=\"logo\"><a href=\"index.html\">fastMovie</a></h1>\n      \n    <div className=\"mood-options\">\n      <p className=\"mood-status\">How Are You Feeling Today?</p>\n      <button className=\"btn-happy\" onClick={() => happyMood()}>Happy</button>\n      <button className=\"btn-sad\" onClick={() => getUpComingMovieList(\"/movie/popular\")}>Sad</button>\n      <button>Tired</button>\n      <button>Angry</button>\n    </div>\n\n    <div className=\"recommended-movies-container\">\n      {recommendedMovieList.map(movie => (\n        <Movie \n        key= {movie.id}\n        movie_id= {movie.id}\n        poster= {IMG_URL + movie.poster_path} \n        rating= {movie.vote_average} />\n      ))}\n      </div>\n\n\n\n      <div className=\"movie-container\">\n      {upComingMovieList.map(movie => (\n        <Movie \n        key= {movie.id}\n        movie_id= {movie.id}\n        poster= {IMG_URL + movie.poster_path} \n        rating= {movie.vote_average} />\n      ))}\n      </div>\n\n      <div className=\"movie-container\">\n      {popularMovieList.map(movie => (\n        <Movie \n        key= {movie.id}\n        movie_id= {movie.id}\n        poster= {IMG_URL + movie.poster_path} \n        rating= {movie.vote_average} />\n      ))}\n      </div>\n\n      <div className=\"movie-container\">\n      {nowPlayingMovieList.map(movie => (\n        <Movie \n        key= {movie.id}\n        movie_id= {movie.id}\n        poster= {IMG_URL + movie.poster_path} \n        rating= {movie.vote_average} />\n      ))}\n      </div>\n\n      <div className=\"trailer-container\">       \n      {trailerList.slice(0, 1).map(trailer => (\n        <Trailer\n        key= {trailer.key}\n        trailer_key= {trailer.key}\n      />\n      ))}\n      </div>\n\n\n  </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}